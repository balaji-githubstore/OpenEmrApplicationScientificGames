<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="6" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-16T09:53:57 IST" name="OpenEMR Suite" finished-at="2021-08-16T09:58:29 IST" duration-ms="272243">
    <groups>
    </groups>
    <test started-at="2021-08-16T09:53:57 IST" name="Login Test - ch" finished-at="2021-08-16T09:55:52 IST" duration-ms="114255">
      <class name="com.sg.test.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:54:16 IST" name="setUp" finished-at="2021-08-16T09:54:42 IST" duration-ms="25650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:54:42 IST" name="invalidCredentialTest" data-provider="invalidCredentialData" finished-at="2021-08-16T09:54:43 IST" duration-ms="1695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bala]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:54:43 IST" name="tearDown" finished-at="2021-08-16T09:54:44 IST" duration-ms="945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:54:44 IST" name="setUp" finished-at="2021-08-16T09:54:53 IST" duration-ms="8368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:54:53 IST" name="invalidCredentialTest" data-provider="invalidCredentialData" finished-at="2021-08-16T09:54:55 IST" duration-ms="2161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[john123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:54:55 IST" name="tearDown" finished-at="2021-08-16T09:54:55 IST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:54:55 IST" name="setUp" finished-at="2021-08-16T09:55:04 IST" duration-ms="8174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:04 IST" name="invalidCredentialTest" data-provider="invalidCredentialData" finished-at="2021-08-16T09:55:05 IST" duration-ms="1607" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bala]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bala123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:05 IST" name="tearDown" finished-at="2021-08-16T09:55:06 IST" duration-ms="793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:06 IST" name="setUp" finished-at="2021-08-16T09:55:14 IST" duration-ms="8391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:14 IST" name="validCredentialTest" data-provider="validCredentialData" finished-at="2021-08-16T09:55:19 IST" duration-ms="4478" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentialTest(LoginTest.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:19 IST" name="tearDown" finished-at="2021-08-16T09:55:21 IST" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:21 IST" name="setUp" finished-at="2021-08-16T09:55:32 IST" duration-ms="10948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:32 IST" name="validCredentialTest" data-provider="validCredentialData" finished-at="2021-08-16T09:55:36 IST" duration-ms="4307" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[physician]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[physician]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentialTest(LoginTest.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:36 IST" name="tearDown" finished-at="2021-08-16T09:55:37 IST" duration-ms="793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:37 IST" name="setUp" finished-at="2021-08-16T09:55:47 IST" duration-ms="9410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:47 IST" name="validCredentialTest" data-provider="validCredentialData" finished-at="2021-08-16T09:55:51 IST" duration-ms="4021" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[accountant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[accountant]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentialTest(LoginTest.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@2c35e847]" started-at="2021-08-16T09:55:51 IST" name="tearDown" finished-at="2021-08-16T09:55:52 IST" duration-ms="821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sg.test.LoginTest -->
    </test> <!-- Login Test - ch -->
    <test started-at="2021-08-16T09:55:52 IST" name="Login Test - ff" finished-at="2021-08-16T09:58:29 IST" duration-ms="157907">
      <class name="com.sg.test.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:55:58 IST" name="setUp" finished-at="2021-08-16T09:57:02 IST" duration-ms="64041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:02 IST" name="invalidCredentialTest" data-provider="invalidCredentialData" finished-at="2021-08-16T09:57:05 IST" duration-ms="3305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bala]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:05 IST" name="tearDown" finished-at="2021-08-16T09:57:08 IST" duration-ms="2093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:08 IST" name="setUp" finished-at="2021-08-16T09:57:25 IST" duration-ms="17373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:25 IST" name="invalidCredentialTest" data-provider="invalidCredentialData" finished-at="2021-08-16T09:57:26 IST" duration-ms="1463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[john123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:26 IST" name="tearDown" finished-at="2021-08-16T09:57:28 IST" duration-ms="1516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:28 IST" name="setUp" finished-at="2021-08-16T09:57:39 IST" duration-ms="10932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:39 IST" name="invalidCredentialTest" data-provider="invalidCredentialData" finished-at="2021-08-16T09:57:40 IST" duration-ms="1631" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bala]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bala123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid username or password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:40 IST" name="tearDown" finished-at="2021-08-16T09:57:42 IST" duration-ms="1568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:42 IST" name="setUp" finished-at="2021-08-16T09:57:51 IST" duration-ms="9139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:51 IST" name="validCredentialTest" data-provider="validCredentialData" finished-at="2021-08-16T09:57:56 IST" duration-ms="4636" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentialTest(LoginTest.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:56 IST" name="tearDown" finished-at="2021-08-16T09:57:57 IST" duration-ms="1355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:57:57 IST" name="setUp" finished-at="2021-08-16T09:58:07 IST" duration-ms="9795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:58:07 IST" name="validCredentialTest" data-provider="validCredentialData" finished-at="2021-08-16T09:58:11 IST" duration-ms="4021" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[physician]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[physician]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentialTest(LoginTest.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:58:11 IST" name="tearDown" finished-at="2021-08-16T09:58:12 IST" duration-ms="1456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:58:12 IST" name="setUp" finished-at="2021-08-16T09:58:23 IST" duration-ms="10849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validCredentialTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:58:23 IST" name="validCredentialTest" data-provider="validCredentialData" finished-at="2021-08-16T09:58:27 IST" duration-ms="4032" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[accountant]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[accountant]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[English (Indian)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OpenEMR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OpenEMR] but found [CloudEMR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OpenEMR] but found [CloudEMR]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.sg.test.LoginTest.validCredentialTest(LoginTest.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredentialTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.sg.test.LoginTest@229c6181]" started-at="2021-08-16T09:58:27 IST" name="tearDown" finished-at="2021-08-16T09:58:29 IST" duration-ms="2201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sg.test.LoginTest -->
    </test> <!-- Login Test - ff -->
  </suite> <!-- OpenEMR Suite -->
</testng-results>
